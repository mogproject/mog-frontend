package com.mogproject.mogami.frontend.action.board

import org.scalatest.flatspec.AnyFlatSpec
import org.scalatest.matchers.must.Matchers


class CursorAdjustableSpec extends AnyFlatSpec with Matchers {
  val TestCursorAdjustable = new CursorAdjustable {}
  "CursorAdjustable#categorizeMovement" must "return integers" in {
    val result = for {
      y <- 8 to -8 by -1
      x <- -8 to 8
      if x != 0 || y != 0
    } yield TestCursorAdjustable.categorizeMovement(x, y)

    result mustBe Seq(
      0xd, 0xc, 0xc, 0xc, 0xc, 0xc, 0xc, 0xc, 0xb, 0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0x9,
      0xe, 0xd, 0xc, 0xc, 0xc, 0xc, 0xc, 0xc, 0xb, 0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0x9, 0x8,
      0xe, 0xe, 0xd, 0xc, 0xc, 0xc, 0xc, 0xc, 0xb, 0xa, 0xa, 0xa, 0xa, 0xa, 0x9, 0x8, 0x8,
      0xe, 0xe, 0xe, 0xd, 0xc, 0xc, 0xc, 0xc, 0xb, 0xa, 0xa, 0xa, 0xa, 0x9, 0x8, 0x8, 0x8,
      0xe, 0xe, 0xe, 0xe, 0xd, 0xc, 0xc, 0xc, 0xb, 0xa, 0xa, 0xa, 0x9, 0x8, 0x8, 0x8, 0x8,
      0xe, 0xe, 0xe, 0xe, 0xe, 0xd, 0xc, 0xc, 0xb, 0xa, 0xa, 0x9, 0x8, 0x8, 0x8, 0x8, 0x8,
      0xe, 0xe, 0xe, 0xe, 0xe, 0xe, 0xd, 0xc, 0xb, 0xa, 0x9, 0x8, 0x8, 0x8, 0x8, 0x8, 0x8,
      0xe, 0xe, 0xe, 0xe, 0xe, 0xe, 0xe, 0xd, 0xb, 0x9, 0x8, 0x8, 0x8, 0x8, 0x8, 0x8, 0x8,
      0xf, 0xf, 0xf, 0xf, 0xf, 0xf, 0xf, 0xf, /**/ 0x7, 0x7, 0x7, 0x7, 0x7, 0x7, 0x7, 0x7,
      0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x5, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6,
      0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6,
      0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x2, 0x2, 0x3, 0x4, 0x4, 0x5, 0x6, 0x6, 0x6, 0x6, 0x6,
      0x0, 0x0, 0x0, 0x0, 0x1, 0x2, 0x2, 0x2, 0x3, 0x4, 0x4, 0x4, 0x5, 0x6, 0x6, 0x6, 0x6,
      0x0, 0x0, 0x0, 0x1, 0x2, 0x2, 0x2, 0x2, 0x3, 0x4, 0x4, 0x4, 0x4, 0x5, 0x6, 0x6, 0x6,
      0x0, 0x0, 0x1, 0x2, 0x2, 0x2, 0x2, 0x2, 0x3, 0x4, 0x4, 0x4, 0x4, 0x4, 0x5, 0x6, 0x6,
      0x0, 0x1, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x3, 0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0x5, 0x6,
      0x1, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x3, 0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0x5
    )

  }

}
